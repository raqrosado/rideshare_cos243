{
  "openapi": "3.0.0",
  "info": {
    "title": "Ride Share API",
    "description": "`API` for **COS 243** Semester Project",
    "version": "0.1.0"
  },
  "tags": [
    {
      "name": "user",
      "description": "Ride Share users"
    },
    {
      "name": "vehicle-type",
      "description": "Vehicle types"
    }
  ],
  "components": {
    "schemas": {
      "Error": {
        "description": "Generic error message",
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        },
        "example": {
          "message": "Something strange happened."
        }
      },
      "User": {
        "description": "Each user of **Ride Share**",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "phone": { "type": "string" },
          "isAdmin": { "type": "boolean" }
        },
        "example": {
          "id": 42,
          "firstName": "Fred",
          "lastName": "Ziffle",
          "email": "fred@example.com",
          "password": "super-secret-thing",
          "phone": "765-555-1212",
          "isAdmin": false
        }
      },
      "VehicleType": {
        "description": "Type of a vehicle",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "vehicleType": { "type": "string" }
        },
        "example": {
          "id": 42,
          "type": "Pickup Truck"
        }
      }
    }
  },
  "paths": {
    "/users": {
      "summary": "Operations on users",
      "get": {
        "summary": "Get all users",
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "All users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created sucessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "userId": 42
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Duplicate email address"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "summary": "Operations on a single user",
      "get": {
        "summary": "Get user by ID",
        "tags": ["user"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of user to fetch",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          }
        }
      }
    },
    "/vehicle-types": {
      "post": {
        "summary": "Create a new vehicle type.",
        "description": "_Each_ vehicle in **Ride Share** has a `type`, making it easier for riders to identify the vehicle.",
        "tags": ["vehicle-type"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicleType": { "type": "string" }
                },
                "example": {
                  "vehicleType": "Pickup Truck"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New vehicle type created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleType"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve all vehicle types",
        "tags": ["vehicle-type"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicle-types/{id}": {
      "patch": {
        "summary": "Update an existing vehicle type",
        "tags": ["vehicle-type"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": { "type": "integer" },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Updated vehicle type",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicleType": {
                    "type": "string"
                  }
                },
                "example": {
                  "vehicleType": "SUV"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleType"
                }
              }
            }
          },
          "400": {
            "description": "No such vehicle ID"
          }
        }
      },
      "delete": {
        "summary": "Delete an existing vehicle type",
        "tags": ["vehicle-type"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": { "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle deleted"
          },
          "400": {
            "description": "Can't delete vehicle"
          }
        }
      }
    }
  }
}
